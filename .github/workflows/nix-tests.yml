name: Nix Build & Test

on:
  push:
#    branches:
#      - master
#    paths:
#      - 'nix/**'
#  pull_request:
#    paths:
#      - 'nix/**'

permissions:
  contents: read
  packages: read

jobs:
  test-nix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Check out this repo
        uses: actions/checkout@v3

      - name: Install Nix
        shell: bash
        run: |
          set -euo pipefail

          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            # Install Nix on Ubuntu
            curl -L https://nixos.org/nix/install | sh
            mkdir -p ~/.config/nix
            echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf
            echo "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}" >> ~/.config/nix/nix.conf

            # Source the installed profile
            source /home/runner/.nix-profile/etc/profile.d/nix.sh
          else
            # Install Nix on macOS
            sh <(curl -L https://nixos.org/nix/install) --daemon
            mkdir -p ~/.config/nix
            echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf
            echo "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}" >> ~/.config/nix/nix.conf

            # Source the Nix daemon profile
            source /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          fi

          # Confirm Nix is installed
          nix --version

      - name: Install asimov-cli and Check
        shell: bash
        run: |
          set -euo pipefail

          # Try sourcing either Ubuntu or macOS Nix profile again
          if [ -f /home/runner/.nix-profile/etc/profile.d/nix.sh ]; then
            source /home/runner/.nix-profile/etc/profile.d/nix.sh
          elif [ -f /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh ]; then
            source /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          fi

          # Register the local flake and install
          nix registry add asimov-cli "path:$GITHUB_WORKSPACE/nix"
          nix profile install flake:asimov-cli#default --no-write-lock-file

          # Verify asimov-cli
          asimov --version